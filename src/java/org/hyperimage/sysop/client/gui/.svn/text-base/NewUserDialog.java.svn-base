/* $Id$ */

/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License, Version 1.0 only
 * (the "License").  You may not use this file except in compliance
 * with the License.
 *
 * You can obtain a copy of the license at license/HYPERIMAGE.LICENSE
 * or http://www.sun.com/cddl/cddl.html.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at license/HYPERIMAGE.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */

/*
 * Copyright 2006-2009 Humboldt-Universitaet zu Berlin
 * All rights reserved.  Use is subject to license terms.
 */

package org.hyperimage.sysop.client.gui;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

import org.hyperimage.client.ws.HiUser;
import org.hyperimage.sysop.client.HISystemOperator;

/**
 * @author Heinz-Guenter Kuper
 */
public class NewUserDialog extends JDialog {
	private JButton m_buttAddUser;
	private JButton m_buttCancel;
	private JLabel m_labelUsername;
	private JLabel m_labelFirstName;
	private JLabel m_labelLastName;
	private JLabel m_labelEMail;
	private JLabel m_labelPassword;
	private JPasswordField m_passwdField;
	private JTextField m_txtfieldUsername;
	private JTextField m_txtfieldFirstName;
	private JTextField m_txtfieldLastName;
	private JTextField m_txtfieldEMail;

	private static HISystemOperator m_hiSysOp = null;
	private static HiUser m_user = null;

	private static final boolean DEBUG = false;


	/** Creates new form AddNewUser */
	public NewUserDialog(java.awt.Frame parent, boolean modal, HISystemOperator hiSysOp) {
		super(parent, modal);
		m_hiSysOp = hiSysOp;
		initComponents();
		pimpComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		m_labelUsername = new JLabel();
		m_labelFirstName = new JLabel();
		m_labelLastName = new JLabel();
		m_labelEMail = new JLabel();
		m_labelPassword = new JLabel();
		m_txtfieldUsername = new JTextField();
		m_txtfieldFirstName = new JTextField();
		m_txtfieldLastName = new JTextField();
		m_txtfieldEMail = new JTextField();
		m_passwdField = new JPasswordField();
		m_buttAddUser = new JButton();
		m_buttCancel = new JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		m_labelUsername.setText("Username:");
		m_labelFirstName.setText("First Name:");
		m_labelLastName.setText("Last Name:");
		m_labelEMail.setText("E-Mail:");
		m_labelPassword.setText("Password:");		
		m_txtfieldUsername.setText("");
		m_txtfieldFirstName.setText("");
		m_txtfieldLastName.setText("");
		m_txtfieldEMail.setText("");
		m_passwdField.setText("");
		//m_passwdField.setMinimumSize(new Dimension(134, 28));
		m_buttAddUser.setText("Add User");
		m_buttCancel.setText("Cancel");

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout.createSequentialGroup()
						.addContainerGap()
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
								.add(layout.createSequentialGroup()
										.add(m_labelPassword)
										.add(18, 18, 18)
										.add(m_passwdField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.add(layout.createSequentialGroup()
												.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
														.add(m_labelUsername)
														.add(m_labelFirstName))
														.add(8, 8, 8)
														.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
																.add(m_txtfieldFirstName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
																.add(m_txtfieldUsername, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)))
																.add(layout.createSequentialGroup()
																		.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
																				.add(m_labelLastName)
																				.add(m_labelEMail))
																				.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
																				.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
																						.add(m_txtfieldEMail, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
																						.add(m_txtfieldLastName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))))
																						.addContainerGap())
																						.add(layout.createSequentialGroup()
																								.add(33, 33, 33)
																								.add(m_buttAddUser)
																								.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
																								.add(m_buttCancel)
																								.addContainerGap(37, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout.createSequentialGroup()
						.addContainerGap()
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
								.add(m_labelUsername)
								.add(m_txtfieldUsername, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
								.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
										.add(m_labelFirstName)
										.add(m_txtfieldFirstName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
										.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
												.add(m_labelLastName)
												.add(m_txtfieldLastName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
												.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
												.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
														.add(m_labelEMail)
														.add(m_txtfieldEMail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
														.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
														.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
																.add(m_labelPassword)
																.add(m_passwdField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
																.add(18, 18, 18)
																.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
																		.add(m_buttAddUser)
																		.add(m_buttCancel))
																		.addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);

		pack();
	}// </editor-fold>

	private void pimpComponents() {
		m_buttAddUser.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent ae) {
				doOKAction();
			}	
		});
		
		m_buttCancel.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				doCancelAction();
			}	
		});
		
		// FIXME [HGK] Still doesn't set field size properly (only when resizing the entire dialog after it has been displayed.
		// The whole dialog looks crap, must be redone.
		Dimension size = new Dimension(134, 28);
		m_passwdField.setMinimumSize(size);
		m_passwdField.setMaximumSize(size);
		m_passwdField.setPreferredSize(size);
		this.pack();
	}

	protected void doOKAction() {
		if( allFieldsFilled() ) {
			m_user = m_hiSysOp.addUser(m_txtfieldUsername.getText(), m_txtfieldFirstName.getText(), m_txtfieldLastName.getText(), new String(m_passwdField.getPassword()), m_txtfieldEMail.getText());
			this.dispose();
		} else {
			JOptionPane.showMessageDialog(this, "Some fields are empty.", "Incomplete Information", JOptionPane.ERROR_MESSAGE); 
		}
		
	}
	
	protected void doCancelAction() {
		// Confirm cancel
		if( someFieldsFilled() ) {
			int nResult = JOptionPane.showConfirmDialog(
					null, "Please confirm that you do not wish to add this user to the system.", "Confirm Cancel",
					JOptionPane.YES_NO_OPTION);
			if( nResult != JOptionPane.YES_OPTION )
				return;
		}
		
		this.dispose();
	}

	private boolean allFieldsFilled() {
		return (m_txtfieldUsername.getText().compareTo("") != 0 &&
				m_txtfieldFirstName.getText().compareTo("") != 0 &&
				m_txtfieldLastName.getText().compareTo("") != 0 &&
				m_txtfieldEMail.getText().compareTo("") != 0 &&
				m_passwdField.getPassword() != null);
	}
	
	/**
	 * I don't bother to check the password in this, because if all they have entered is the password,
	 * then I deem that to be minimal data entry and therefore no big deal to reenter.
	 * @return
	 */
	private boolean someFieldsFilled() {
		return (m_txtfieldUsername.getText().compareTo("") != 0 ||
				m_txtfieldFirstName.getText().compareTo("") != 0 ||
				m_txtfieldLastName.getText().compareTo("") != 0 ||
				m_txtfieldEMail.getText().compareTo("") != 0 );
	}
	
	public HiUser getNewlyAddedUser() {
		return m_user;
	}
}
