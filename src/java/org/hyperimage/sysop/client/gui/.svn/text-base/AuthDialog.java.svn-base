/* $Id$ */

/*
 * CDDL HEADER START
 *
 * The contents of this file are subject to the terms of the
 * Common Development and Distribution License, Version 1.0 only
 * (the "License").  You may not use this file except in compliance
 * with the License.
 *
 * You can obtain a copy of the license at license/HYPERIMAGE.LICENSE
 * or http://www.sun.com/cddl/cddl.html.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL HEADER in each
 * file and include the License file at license/HYPERIMAGE.LICENSE.
 * If applicable, add the following below this CDDL HEADER, with the
 * fields enclosed by brackets "[]" replaced with your own identifying
 * information: Portions Copyright [yyyy] [name of copyright owner]
 *
 * CDDL HEADER END
 */

/*
 * Copyright 2006-2009 Humboldt-Universitaet zu Berlin
 * All rights reserved.  Use is subject to license terms.
 */

package org.hyperimage.sysop.client.gui;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPasswordField;

/**
 * @author Heinz-Guenter Kuper
 *
 */
public class AuthDialog extends JDialog {
	private JButton jButton1;
	private JButton jButton2;
	private JLabel jLabel1;
	private JLabel jLabel2;
	private JPasswordField jPasswordField1;
	
	private static String m_strPasswd = "";
	
	private static final boolean DEBUG = true;

	public AuthDialog(Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		pimpComponents();
	}

	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jPasswordField1 = new javax.swing.JPasswordField();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel1.setText("Password:");

		if(DEBUG) jPasswordField1.setText("geheim");

		jButton1.setText("Authenticate");

		jButton2.setText("Cancel");

		jLabel2.setText("Please enter the password and click Authenticate.");

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout.createSequentialGroup()
						.addContainerGap()
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
								.add(layout.createSequentialGroup()
										.add(jButton1)
										.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.add(jButton2))
										.add(layout.createSequentialGroup()
												.add(jLabel1)
												.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
												.add(jPasswordField1))
												.add(jLabel2))
												.addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout.createSequentialGroup()
						.addContainerGap()
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
								.add(jLabel1)
								.add(jPasswordField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
								.add(jLabel2)
								.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
								.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
										.add(jButton1)
										.add(jButton2))
										.addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);

		pack();
	}
	
	private void pimpComponents() {
		jButton1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ae) {
				if( jPasswordField1.getPassword() != null ) {
					setPassword(jPasswordField1.getPassword());
				} else
					jPasswordField1.setText("");
			}
		});
		
		jButton2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ae) {
				m_strPasswd = "";
				System.exit(0);
			}
		});
	}
	
	private void setPassword(char[] password) {
		m_strPasswd = new String(password);
		// Reset the array for security reasons ... although an array may already be hanging around due to
		// call to getPassword in method pimpComponents() ...
		for( char ch : password ) {
			ch = '0';
		}
		this.dispose();
	}

	public String getPassword() {
		return m_strPasswd;
	}
}

